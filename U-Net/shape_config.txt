conv1: torch.Size([1, 64, 512, 512])
bn1: torch.Size([1, 64, 512, 512])
relu torch.Size([1, 64, 512, 512])
conv2: torch.Size([1, 64, 512, 512])
bn2 torch.Size([1, 64, 512, 512])
After conv layer 1: torch.Size([1, 64, 512, 512]), After pooling 1: torch.Size([1, 64, 256, 256]) 

conv1: torch.Size([1, 128, 256, 256])
bn1: torch.Size([1, 128, 256, 256])
relu torch.Size([1, 128, 256, 256])
conv2: torch.Size([1, 128, 256, 256])
bn2 torch.Size([1, 128, 256, 256])
After conv layer 2: torch.Size([1, 128, 256, 256]), After pooling 1: torch.Size([1, 128, 128, 128]) 

conv1: torch.Size([1, 256, 128, 128])
bn1: torch.Size([1, 256, 128, 128])
relu torch.Size([1, 256, 128, 128])
conv2: torch.Size([1, 256, 128, 128])
bn2 torch.Size([1, 256, 128, 128])
After conv layer 3: torch.Size([1, 256, 128, 128]), After pooling 1: torch.Size([1, 256, 64, 64]) 

conv1: torch.Size([1, 512, 64, 64])
bn1: torch.Size([1, 512, 64, 64])
relu torch.Size([1, 512, 64, 64])
conv2: torch.Size([1, 512, 64, 64])
bn2 torch.Size([1, 512, 64, 64])
After conv layer 4: torch.Size([1, 512, 64, 64]), After pooling 1: torch.Size([1, 512, 32, 32]) 

conv1: torch.Size([1, 1024, 32, 32])
bn1: torch.Size([1, 1024, 32, 32])
relu torch.Size([1, 1024, 32, 32])
conv2: torch.Size([1, 1024, 32, 32])
bn2 torch.Size([1, 1024, 32, 32])
After bottle neck: torch.Size([1, 1024, 32, 32]) 

conv1: torch.Size([1, 512, 64, 64])
bn1: torch.Size([1, 512, 64, 64])
relu torch.Size([1, 512, 64, 64])
conv2: torch.Size([1, 512, 64, 64])
bn2 torch.Size([1, 512, 64, 64])
decoder layer 1: torch.Size([1, 512, 64, 64]) 

conv1: torch.Size([1, 256, 128, 128])
bn1: torch.Size([1, 256, 128, 128])
relu torch.Size([1, 256, 128, 128])
conv2: torch.Size([1, 256, 128, 128])
bn2 torch.Size([1, 256, 128, 128])
decoder layer 2: torch.Size([1, 256, 128, 128]) 

conv1: torch.Size([1, 128, 256, 256])
bn1: torch.Size([1, 128, 256, 256])
relu torch.Size([1, 128, 256, 256])
conv2: torch.Size([1, 128, 256, 256])
bn2 torch.Size([1, 128, 256, 256])
decoder layer 3: torch.Size([1, 128, 256, 256]) 

conv1: torch.Size([1, 64, 512, 512])
bn1: torch.Size([1, 64, 512, 512])
relu torch.Size([1, 64, 512, 512])
conv2: torch.Size([1, 64, 512, 512])
bn2 torch.Size([1, 64, 512, 512])
decoder layer 4: torch.Size([1, 64, 512, 512]) 

Output: torch.Size([1, 4, 512, 512])
torch.Size([1, 4, 512, 512])
